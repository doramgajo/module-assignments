package gui;

import com.formdev.flatlaf.FlatDarculaLaf;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableCellRenderer;


public class EditorCRUD extends javax.swing.JFrame {
    
    Init parent;
    /**
     * Creates new form Aplicacion
     */
    public EditorCRUD(Init parent) throws SQLException {
        initComponents();
        this.parent = parent;

        centrarTablas();
        //estilos botones
        botonActualizar.putClientProperty("JButton.buttonType", "roundRect");
        botonCrear.putClientProperty("JButton.buttonType", "roundRect");
        botonEliminar.putClientProperty("JButton.buttonType", "roundRect");
        botonRefrescarTablas.putClientProperty("JButton.buttonType", "roundRect");
        
        
        //listener de cierre
        this.addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e) {
                parent.setVisible(true);
            }
        });
        
        //actualizaciones
        logica.LogicaTablas.crearListaTablas(this);
        
        logica.LogicaTablas.prepararActualizacionesDeTablas(this);
        
        logica.LogicaTablas.actualizarTablasBaseDeDatos();
        
    }
    
    private void centrarTablas() {
        //centra contenido de tablas
        ArrayList<JTable> listaTablas = new ArrayList();
        listaTablas.add(tablaCiclos);
        listaTablas.add(tablaCursos);
        listaTablas.add(tablaEspecialidades);
        listaTablas.add(tablaFamiliasProfesionales);
        listaTablas.add(tablaModulos);
        listaTablas.add(tablaModulosCursos);
        listaTablas.add(tablaProfesores);
        listaTablas.add(tablaTurnos);
        
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        
        for (JTable tabla : listaTablas) {
            tabla.setDefaultRenderer(String.class, centerRenderer);
            tabla.setDefaultRenderer(Integer.class, centerRenderer);
        }
        
    }

    private EditorCRUD() {
       initComponents();
    }

    public JTable getTablaCiclos() {
        return tablaCiclos;
    }

    public JTable getTablaCursos() {
        return tablaCursos;
    }

    public JTable getTablaEspecialidades() {
        return tablaEspecialidades;
    }

    public JTable getTablaFamiliasProfesionales() {
        return tablaFamiliasProfesionales;
    }

    public JTable getTablaModulos() {
        return tablaModulos;
    }

    public JTable getTablaModulosCursos() {
        return tablaModulosCursos;
    }

    public JTable getTablaProfesores() {
        return tablaProfesores;
    }

    public JTable getTablaTurnos() {
        return tablaTurnos;
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        panelBasededatos = new javax.swing.JPanel();
        panelPestannasBBDD = new javax.swing.JTabbedPane();
        jScrollPane1turnos = new javax.swing.JScrollPane();
        tablaTurnos = new javax.swing.JTable();
        jScrollPane2cursos = new javax.swing.JScrollPane();
        tablaCursos = new javax.swing.JTable();
        jScrollPane3ciclos = new javax.swing.JScrollPane();
        tablaCiclos = new javax.swing.JTable();
        jScrollPane4familiasProfesionales = new javax.swing.JScrollPane();
        tablaFamiliasProfesionales = new javax.swing.JTable();
        jScrollPane5modulos = new javax.swing.JScrollPane();
        tablaModulos = new javax.swing.JTable();
        jScrollPane6especialidades = new javax.swing.JScrollPane();
        tablaEspecialidades = new javax.swing.JTable();
        jScrollPane7profesores = new javax.swing.JScrollPane();
        tablaProfesores = new javax.swing.JTable();
        jScrollPane8modulosCursos = new javax.swing.JScrollPane();
        tablaModulosCursos = new javax.swing.JTable();
        panelBotonesCRUD = new javax.swing.JPanel();
        botonCrear = new javax.swing.JButton();
        botonActualizar = new javax.swing.JButton();
        botonEliminar = new javax.swing.JButton();
        botonRefrescarTablas = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Gestión de la base de datos");
        setIconImage(new ImageIcon("src/main/resources/logo_programa.png").getImage());
        setMaximumSize(new java.awt.Dimension(1300, 700));
        setMinimumSize(new java.awt.Dimension(1300, 700));
        setPreferredSize(new java.awt.Dimension(1300, 700));
        getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        panelBasededatos.setLayout(new javax.swing.BoxLayout(panelBasededatos, javax.swing.BoxLayout.PAGE_AXIS));

        panelPestannasBBDD.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        panelPestannasBBDD.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                panelPestannasBBDDStateChanged(evt);
            }
        });

        tablaTurnos.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        tablaTurnos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Identificador", "Descripción"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1turnos.setViewportView(tablaTurnos);

        panelPestannasBBDD.addTab("Turnos", jScrollPane1turnos);

        tablaCursos.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        tablaCursos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Turno (identificador)", "Ciclo (identificador)", "Nivel"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2cursos.setViewportView(tablaCursos);

        panelPestannasBBDD.addTab("Cursos", jScrollPane2cursos);

        tablaCiclos.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        tablaCiclos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Identificador", "Nombre", "Familia profesional (identificador)", "Tipo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3ciclos.setViewportView(tablaCiclos);

        panelPestannasBBDD.addTab("Ciclos", jScrollPane3ciclos);

        tablaFamiliasProfesionales.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        tablaFamiliasProfesionales.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Identificador", "Descripción"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4familiasProfesionales.setViewportView(tablaFamiliasProfesionales);

        panelPestannasBBDD.addTab("Familias profesionales", jScrollPane4familiasProfesionales);

        tablaModulos.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        tablaModulos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Descripción", "Hora reales", "Horas ponderadas", "Especialidad (identificador)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5modulos.setViewportView(tablaModulos);

        panelPestannasBBDD.addTab("Módulos", jScrollPane5modulos);

        tablaEspecialidades.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        tablaEspecialidades.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Identificador", "Descripción"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6especialidades.setViewportView(tablaEspecialidades);

        panelPestannasBBDD.addTab("Especialidades", jScrollPane6especialidades);

        tablaProfesores.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        tablaProfesores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Identificador", "Nombre", "Apellidos", "Número de orden", "Especialidad (identificador)", "Horas contratadas"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane7profesores.setViewportView(tablaProfesores);

        panelPestannasBBDD.addTab("Profesores", jScrollPane7profesores);

        tablaModulosCursos.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        tablaModulosCursos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Identificador", "Módulo (código)", "Curso (código)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane8modulosCursos.setViewportView(tablaModulosCursos);

        panelPestannasBBDD.addTab("Módulos-Cursos", jScrollPane8modulosCursos);

        panelBasededatos.add(panelPestannasBBDD);

        panelBotonesCRUD.setMaximumSize(new java.awt.Dimension(32767, 60));
        panelBotonesCRUD.setMinimumSize(new java.awt.Dimension(616, 60));
        panelBotonesCRUD.setPreferredSize(new java.awt.Dimension(1417, 60));
        panelBotonesCRUD.setLayout(new java.awt.GridBagLayout());

        botonCrear.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        botonCrear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/crud_create.png"))); // NOI18N
        botonCrear.setText("Crear registro");
        botonCrear.setMaximumSize(new java.awt.Dimension(250, 40));
        botonCrear.setMinimumSize(new java.awt.Dimension(250, 40));
        botonCrear.setPreferredSize(new java.awt.Dimension(250, 40));
        botonCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCrearActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelBotonesCRUD.add(botonCrear, gridBagConstraints);

        botonActualizar.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        botonActualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/crud_update.png"))); // NOI18N
        botonActualizar.setText("Actualizar registro");
        botonActualizar.setMaximumSize(new java.awt.Dimension(250, 40));
        botonActualizar.setMinimumSize(new java.awt.Dimension(250, 40));
        botonActualizar.setPreferredSize(new java.awt.Dimension(250, 40));
        botonActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonActualizarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelBotonesCRUD.add(botonActualizar, gridBagConstraints);

        botonEliminar.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        botonEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/crud_delete.png"))); // NOI18N
        botonEliminar.setText("Eliminar registro");
        botonEliminar.setMaximumSize(new java.awt.Dimension(250, 40));
        botonEliminar.setMinimumSize(new java.awt.Dimension(250, 40));
        botonEliminar.setPreferredSize(new java.awt.Dimension(250, 40));
        botonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEliminarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelBotonesCRUD.add(botonEliminar, gridBagConstraints);

        botonRefrescarTablas.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        botonRefrescarTablas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/crud_read.png"))); // NOI18N
        botonRefrescarTablas.setText("Refrescar tablas");
        botonRefrescarTablas.setMaximumSize(new java.awt.Dimension(250, 40));
        botonRefrescarTablas.setMinimumSize(new java.awt.Dimension(250, 40));
        botonRefrescarTablas.setPreferredSize(new java.awt.Dimension(250, 40));
        botonRefrescarTablas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRefrescarTablasActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelBotonesCRUD.add(botonRefrescarTablas, gridBagConstraints);

        panelBasededatos.add(panelBotonesCRUD);

        getContentPane().add(panelBasededatos);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void botonRefrescarTablasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRefrescarTablasActionPerformed
        try {
            logica.LogicaTablas.actualizarTablasBaseDeDatos();
        } catch (SQLException ex) {
            Logger.getLogger(EditorCRUD.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_botonRefrescarTablasActionPerformed

    private void botonCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCrearActionPerformed
        try {
            logica.LogicaTablas.switchCrearRegistro(panelPestannasBBDD);
        } catch (SQLException ex) {
            Logger.getLogger(EditorCRUD.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_botonCrearActionPerformed

    private void botonActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonActualizarActionPerformed
        
        if (logica.LogicaTablas.getListaTablas().get(panelPestannasBBDD.getSelectedIndex()).getSelectedRow() < 0 || logica.LogicaTablas.getListaTablas().get(panelPestannasBBDD.getSelectedIndex()).getSelectedRow() > logica.LogicaTablas.getListaTablas().get(panelPestannasBBDD.getSelectedIndex()).getRowCount() - 1) {
            JOptionPane.showMessageDialog(this, "Para editar un registro, selecciónelo en una de las tablas.");
        } else {

             try {
            logica.LogicaTablas.switchActualizarRegistro(panelPestannasBBDD);
        } catch (SQLException ex) {
            Logger.getLogger(EditorCRUD.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }   
            
        }
        
    }//GEN-LAST:event_botonActualizarActionPerformed

    private void botonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEliminarActionPerformed
        
        if (logica.LogicaTablas.getListaTablas().get(panelPestannasBBDD.getSelectedIndex()).getSelectedRow() < 0 || logica.LogicaTablas.getListaTablas().get(panelPestannasBBDD.getSelectedIndex()).getSelectedRow() > logica.LogicaTablas.getListaTablas().get(panelPestannasBBDD.getSelectedIndex()).getRowCount() - 1) {
            JOptionPane.showMessageDialog(this, "Para eliminar un registro, selecciónelo en una de las tablas.");
        } else {

            if (JOptionPane.showConfirmDialog(this, "¿Desea eliminar el registro seleccionado?") == 0) {
                String pk = logica.LogicaTablas.getListaModelos().get(panelPestannasBBDD.getSelectedIndex()).getValueAt(logica.LogicaTablas.getListaTablas().get(panelPestannasBBDD.getSelectedIndex()).getSelectedRow(), 0).toString();
                System.out.println("pk: " + pk);
                try {
                    if (logica.LogicaTablas.switchEliminarRegistro(panelPestannasBBDD)) {
                        JOptionPane.showMessageDialog(null, "Se ha eliminado correctamente.");
                    } else {
                        JOptionPane.showMessageDialog(null, "No se pudo eliminar.");
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(EditorCRUD.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(null, ex.getMessage());
                }
            }
        }
        
        
        
    }//GEN-LAST:event_botonEliminarActionPerformed

    private void panelPestannasBBDDStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_panelPestannasBBDDStateChanged
        if (panelPestannasBBDD.getSelectedIndex() == 0) {
            botonCrear.setEnabled(false);
            botonActualizar.setEnabled(false);
            botonEliminar.setEnabled(false);
        } else {
            botonCrear.setEnabled(true);
            botonActualizar.setEnabled(true);
            botonEliminar.setEnabled(true);
        }
    }//GEN-LAST:event_panelPestannasBBDDStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws UnsupportedLookAndFeelException {
        
        UIManager.setLookAndFeel(new FlatDarculaLaf());

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditorCRUD().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonActualizar;
    private javax.swing.JButton botonCrear;
    private javax.swing.JButton botonEliminar;
    private javax.swing.JButton botonRefrescarTablas;
    private javax.swing.JScrollPane jScrollPane1turnos;
    private javax.swing.JScrollPane jScrollPane2cursos;
    private javax.swing.JScrollPane jScrollPane3ciclos;
    private javax.swing.JScrollPane jScrollPane4familiasProfesionales;
    private javax.swing.JScrollPane jScrollPane5modulos;
    private javax.swing.JScrollPane jScrollPane6especialidades;
    private javax.swing.JScrollPane jScrollPane7profesores;
    private javax.swing.JScrollPane jScrollPane8modulosCursos;
    private javax.swing.JPanel panelBasededatos;
    private javax.swing.JPanel panelBotonesCRUD;
    private javax.swing.JTabbedPane panelPestannasBBDD;
    private javax.swing.JTable tablaCiclos;
    private javax.swing.JTable tablaCursos;
    private javax.swing.JTable tablaEspecialidades;
    private javax.swing.JTable tablaFamiliasProfesionales;
    private javax.swing.JTable tablaModulos;
    private javax.swing.JTable tablaModulosCursos;
    private javax.swing.JTable tablaProfesores;
    private javax.swing.JTable tablaTurnos;
    // End of variables declaration//GEN-END:variables
}
